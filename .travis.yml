sudo: required
services:
  - docker
branches:
  only:
    - dev
    - stage
    - prod

before_install:
  - >
    if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then
      echo "SKIP BEFORE INSTALL";
    else
      docker build -t react-test -f ./react/Dockerfile.dev ./react;
    fi;

script:
  - >
    if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then
      echo "SKIP SCRIPT";
    else
      docker run react-test npm run test -- --coverage;
    fi;

after_script:
  #- sed -ri -e 's|ENV|'"${TRAVIS_BRANCH}"'|g' Dockerrun.aws.json

after_success:
  - >
    if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then
      echo "SKIP AFTER SUCCESS";
    else
      # build images
      docker build -t codegdo/portal:nginx-$TRAVIS_BRANCH ./nginx;
      docker build -t codegdo/portal:express-$TRAVIS_BRANCH ./express;
      docker build -t codegdo/portal:react-$TRAVIS_BRANCH ./react;
      # log in to the docker CLI
      echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin;
      # push to docker hub
      docker push codegdo/portal:nginx-$TRAVIS_BRANCH;
      docker push codegdo/portal:express-$TRAVIS_BRANCH;
      docker push codegdo/portal:react-$TRAVIS_BRANCH;
    fi;

deploy:
  provider: elasticbeantalk
  region: us-west-1
  app: portal-$TRAVIS_BRANCH
  env: portal-$TRAVIS_BRANCH
  bucket_name: elasticbeanstalk-us-west-1-408615658702
  bucket_path: portal-$TRAVIS_BRANCH
  access_key_id: $AWS_ACCESS_KEY
  secret_access_key: $AWS_SECRET_KEY
  on:
    branch: $TRAVIS_BRANCH

env:
  global:
    - ENV=$TRAVIS_BRANCH
