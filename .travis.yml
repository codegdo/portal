sudo: required
services:
  - docker
branches:
  only:
    - dev
    - stage
    - prod
env:
  global:
    - BRANCH=$TRAVIS_BRANCH
    - PULL_REQUEST=$TRAVIS_PULL_REQUEST
    - PULL_BRANCH=$TRAVIS_PULL_REQUEST_BRANCH
    - SHA=$TRAVIS_PULL_REQUEST_SHA

before_install:
  - >
    if [ "$PULL_REQUEST" != "false" ]; then
      if [[ "$PULL_BRANCH" =~ ^react\/.*$ ]]; then
        docker build -t react-test -f ./react/Dockerfile.dev ./react;
      fi;
    fi;

script:
  - >
    if [ "$PULL_REQUEST" != "false" ]; then
      if [[ "$PULL_BRANCH" =~ ^react\/.*$ ]]; then
        docker run react-test npm run test -- --coverage;
      fi;
    fi;

after_success:
  - >
    if [ "$PULL_REQUEST" != "false" ]; then
      # build images
      docker build -t codegdo/portal:nginx-$BRANCH ./nginx;
      docker build -t codegdo/portal:express-$BRANCH ./express;
      docker build -t codegdo/portal:react-$BRANCH ./react;

      # log in to the docker CLI
      echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin;

      docker push codegdo/portal:nginx-$BRANCH;
      docker push codegdo/portal:express-$BRANCH;
      docker push codegdo/portal:react-$BRANCH;
    fi;

deploy:
  provider: elasticbeantalk
  region: us-west-1
  app: portal-$BRANCH
  env: portal-$BRANCH
  bucket_name: elasticbeanstalk-us-west-1-408615658702
  bucket_path: portal-$BRANCH
  access_key_id: $AWS_ACCESS_KEY
  secret_access_key: $AWS_SECRET_KEY
  zip_file: Dockerrun.aws.json
  skip_cleanup: true
  edge: true
  on:
    branch: $BRANCH
